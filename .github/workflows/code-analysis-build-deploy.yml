name: Code Analysis and build + deploy Frontend & Backend services

on:
    push:
        branches: ['**']
    pull_request:
        branches: ['**']
    workflow_dispatch:

jobs:
    code-analysis:
        name: Code Analysis (Frontend & Backend) & Backend Integration Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20'

            # === Frontend ===
            - name: Install frontend dependencies
              run: npm install --force
              working-directory: frontend

            - name: Run ESLint (frontend - TypeScript)
              run: npm run eslint:ts
              working-directory: frontend

            - name: Run ESLint (frontend - HTML)
              run: npm run eslint:html
              working-directory: frontend

            - name: Run StyleLint (frontend)
              run: npm run stylelint
              working-directory: frontend

            # === Backend ===
            - name: Install backend dependencies
              run: npm install
              working-directory: backend

            - name: Run ESLint (backend - TypeScript)
              run: npm run eslint:ts
              working-directory: backend

            - name: Run backend integration tests
              run: npm run test
              working-directory: backend

    build-and-deploy:
        name: Build and deploy
        needs: code-analysis
        if: github.ref == 'refs/heads/dev'
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Setup Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '20'

            -   name: Clean install dependencies
                run: |
                    cd frontend
                    rm -rf node_modules package-lock.json

            -   name: Install dependencies
                run: |
                    cd frontend
                    npm install --force

            -   name: Build Angular (Browser + Server)
                run: |
                    cd frontend
                    npm run build:prod

            -   name: Copy package.json to server
                uses: appleboy/scp-action@v0.1.7
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    source: "frontend/package.json"
                    target: "/root/uni-fail/frontend"
                    strip_components: 1

            -   name: Clean old frontend build on server
                uses: appleboy/ssh-action@v0.1.10
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    script: |
                        rm -rf /root/uni-fail/frontend/dist/frontend/browser
                        rm -rf /root/uni-fail/frontend/dist/frontend/server

            -   name: Prepare deploy folder
                run: |
                    mkdir -p frontend_deploy
                    cp -r frontend/dist/frontend/browser frontend_deploy/
                    cp -r frontend/dist/frontend/server frontend_deploy/

            -   name: Copy built Angular app (dist/) to server
                uses: appleboy/scp-action@v0.1.7
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    source: "frontend_deploy"
                    target: "/root/uni-fail/frontend/dist/frontend"
                    strip_components: 1

            # --- BACKEND BUILD & DEPLOY ---

            -   name: Install backend dependencies
                run: |
                    cd backend
                    npm ci

            -   name: Build backend (e.g. NestJS, TS â†’ JS)
                run: |
                    cd backend
                    npm run build

            -   name: Copy backend package.json to server
                uses: appleboy/scp-action@v0.1.7
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    source: "backend/package.json"
                    target: "/root/uni-fail/backend"
                    strip_components: 1

            -   name: Clean old backend build on server
                uses: appleboy/ssh-action@v0.1.10
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    script: |
                        rm -rf /root/uni-fail/backend/dist

            -   name: Copy backend dist/ to server
                uses: appleboy/scp-action@v0.1.7
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    source: "backend/dist/**"
                    target: "/root/uni-fail/backend/"
                    strip_components: 1

            -   name: Restart frontend and backend Docker container
                uses: appleboy/ssh-action@v1.0.3
                with:
                    host: 91.99.109.27
                    username: root
                    key: ${{ secrets.DEPLOY_KEY }}
                    script: |
                        cd /root/uni-fail/
                        docker compose down
                        docker compose up -d --build
